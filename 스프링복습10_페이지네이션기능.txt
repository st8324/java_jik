- 사전준비
https://github.com/st8324/Docs/spring framework/Pagination.md
1. pagination 패키지
 - 패키지 생성

2. Criteria 클래스
 - pagination패키지에 클래스 생성 및 코드 복붙
 - getter/setter 삭제 후, @Data 추가

3. PageMaker 클래스
 - pagination패키지에 클래스 생성 및 코드 복붙
 - getter/setter 삭제 후, @Data 추가
 - Criteria criteria를 Criteria cri로 수정
 - totalCount, displayPageNum, Criteria cri를 이용한 생성자 추가 후
   생성자에서 CalcData() 호출

- 페이지네이션 적용을 위한 질문들
 1. 페이지네이션을 적용하려면 무엇이 필요한가/무슨작업을 해야하는가?
   => PageMaker 객체
 2. PageMaker 객체를 어디에서 만들건가?
   => 컨트롤러에서 게시글 리스트를 보여주는 메소드에서 객체를 생성
 3. PageMaker 객체를 만들기 위해서는 어떤 정보가 필요한가?
   => 전체 게시글 수, 한 페이지네이션에서 보여지는 최대 페이지 개수, 현재 페이지 정보
   => totalCount, displayPageNum, cri
 4. 전체 게시글 수를 가져오는 작업
 5. 현재 페이지 정보 가져오는 작업
 6. PageMaker 객체를 생성하는 작업
 7. 화면에 PageMaker 객체를 전달
 8. 서버에서 보내준 PageMaker 객체를 이용하여 페이지네이션 구성
 9. 페이지에 맞는 게시글 리스트 가져오는 작업

- 작업
1. 보드 컨트롤러
 - 보드 서비스에게 일을 시킴 - 게시글을 가져오는 메소드에서
  - 해야할 일 : 전체 게시글 수를 가져옴(삭제되지 않은)
  - 알려주는 정보 : 없음
  - 받는 정보 : 전체 게시글 수
 
2. 보드 서비스
 - 전체게시글을 가져오는 메소드 추가
3. 보드 서비스 임플
 - 보드 다오에게 일 시킴 - 전체 게시글을 가져오는 메소드에서
  - 해야할 일 : 전체 게시글 수를 가져옴(삭제되지 않은)
  - 알려주는 정보 : 없음
  - 받는 정보 : 전체 게시글 수

4. 보드 다오
 - 전체 게시글을 가져오는 메소드 추가

5. 보드 매퍼
 - select 태그/select문을 이용하여 전체 게시글 가져오는 쿼리 작성
 - resultType은 int로 설정

6. 보드 컨트롤러
 - 전체 게시글 수를 잘 가져왔는지 콘솔에서 확인

--- 전체 게시글 수 가져오는 작업 완료

7. 보드 컨트롤러
 - 게시글 가져오는 메소드
  - 매개변수에 현재 페이지 정보를 가져오기 위한 객체를 추가
  - 필요하면 한 페이지의 컨텐츠 수를 설정
  - 현재 페이즈 정보를 콘솔에서 확인

-- 페이지 정보 가져오는 작업 완료

8. 보드 컨트롤러 
 - 게시글 가져오는 메소드
  - PageMaker 생성자를 이용하여 객체를 생성
  - 생성된 PageMaker 객체를 콘솔에서 확인
  - 생성된 PageMaker 객체를 화면에 전달
  
-- PageMaker 객체 생성 및 화면에 전달 작업 완료

9. list.jsp
 - PageMaker 객체와 부트스트랩 샘플 코드를 이용하여 화면에 페이지네이션 구성

-- PageMaker를 이용하여 화면에 페이지네이션 적용 완료

10. 보드컨트롤러
 - 기존에 보드서비스에게 게시글 리스트가져오는 시키는 메소드를 수정
   => 현재 페이지 정보를 주면서 게시글 리스트를 가져오라수 시킴

11. 보드 서비스
 - 기존에 게시글 리스트 가져오는 메소드를 페이지 정보를 주면서 게시글 리스트를 가져오는 메소드로 수정
12. 보드 서비스임플
 - 기존에 보드다오에게 시킨 게시글 리스트 가져오는 메소드를 페이지 정보를 주면서 게시글 리스트를 가져오는 메소드로 수정

13. 보드다오
 - 기존에 게시글 리스트 가져오는 메소드를 페이지 정보를 주면서 게시글 리스트를 가져오는 메소드로 수정
 - @Param
14. 보드매퍼
 - limit과 페이지 정보를 이용하여 게시글 검색하는 쿼리문으로 수정








 