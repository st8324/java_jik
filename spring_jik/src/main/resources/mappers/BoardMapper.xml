<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.green.spring.dao.BoardDAO">
  <insert id="insertBoard" useGeneratedKeys="true" keyProperty="b.bd_num">
  	insert into board(bd_title, bd_content, bd_me_id, bd_ori_num, bd_depth, bd_order)
  	<if test="b.bd_ori_num == 0">
		select #{b.bd_title}, #{b.bd_content}, #{b.bd_me_id}, ifnull(max(bd_num),0) + 1, 
			1, 1 from board
		</if>
		<if test="b.bd_ori_num != 0">
		values(#{b.bd_title}, #{b.bd_content}, #{b.bd_me_id}, #{b.bd_ori_num}, #{b.bd_depth}+1, #{b.bd_order}+1) 
		</if>
  </insert>
  
  <update id="updateBoardOrder">
  	update board set bd_order = bd_order+1 where bd_ori_num = #{bo.bd_ori_num} and bd_order > #{bo.bd_order}
  </update>
  
  <select id="selectBoardList" resultType="kr.green.spring.vo.BoardVO">
  	select * from board 
  		where bd_del = 'N' 
  		<if test="cri.searchType == 'all'">
  		and (bd_title like concat('%', #{cri.search} ,'%') or bd_me_id like concat('%',#{cri.search} ,'%'))
  		</if>
  		<if test="cri.searchType != 'all'">
  		and ${cri.searchType} like concat('%',#{cri.search} ,'%')
  		</if>
  		<if test="cri.column != 'bd_num'">
  			order by ${cri.column} ${cri.orderBy}
  		</if>
  		<if test="cri.column == 'bd_num'">
  			order by bd_ori_num ${cri.orderBy}, bd_order asc
  		</if>
  		limit #{cri.pageStart}, #{cri.perPageNum}
  </select>
  
  <update id="updateViews">
  	update board
  		set bd_views = bd_views+1
  		where bd_num = #{bd_num}
  </update>
  <select id="selectBoard" resultType="kr.green.spring.vo.BoardVO">
  	select * from board where bd_num = #{bd_num}
  </select>
  <update id="updateBoard">
  	update board
  		set bd_title = #{b.bd_title}, bd_content = #{b.bd_content}, bd_up_date = now()
  		where bd_num = #{b.bd_num}
  </update>
  <update id="deleteBoard">
  	update board
  		set bd_del = #{bd_del}
  		where bd_num = #{bd_num}
  </update>
  <select id="selectTotalCount" resultType="int">
  	select count(*) from board where bd_del = 'N' 
  		<if test="cri.searchType == 'all'">
  		and (bd_title like concat('%', #{cri.search} ,'%') or bd_me_id like concat('%',#{cri.search} ,'%'))
  		</if>
  		<if test="cri.searchType != 'all'">
  		and ${cri.searchType} like concat('%',#{cri.search} ,'%')
  		</if>
  </select>
  <select id="selectLikes" resultType="kr.green.spring.vo.LikesVO">
  	select * from likes where li_me_id = #{li.li_me_id} and li_bd_num = #{li.li_bd_num}
  </select>
  <insert id="insertLikes">
  	insert into likes(li_bd_num, li_me_id, li_state)
  		values(#{li.li_bd_num},#{li.li_me_id},#{li.li_state})
  </insert>
  <update id="updateLikes">
  	update likes set li_state = #{li.li_state} where li_num = #{li.li_num}
  </update>
  <update id="updateBoardLikes">
  	update board set
			bd_up = (select count(*) from likes where li_bd_num = #{bd_num} and li_state = 1),
	    bd_down = (select count(*) from likes where li_bd_num = #{bd_num} and li_state = -1)
		where bd_num = #{bd_num}
  </update>
  <insert id="insertComment">
  	insert into comments(co_me_id, co_content, co_bd_num, co_ori_num, co_depth, co_order) 
  	<if test="co.co_ori_num == 0">
  		select #{co.co_me_id}, #{co.co_content}, #{co.co_bd_num}, ifnull(max(co_num),0) + 1, 1, 1 from comments
  	</if>
  	<if test="co.co_ori_num != 0">
  		values(#{co.co_me_id}, #{co.co_content}, #{co.co_bd_num}, 
  			#{co.co_ori_num}, #{co.co_depth}+1, #{co.co_order}+1)
  	</if>
  </insert>
  <update id="updateCommentOrder">
  	update comments set co_order = co_order+1 where co_ori_num = #{co.co_ori_num} and co_order > #{co.co_order}
  </update>
  
  <select id="selectCommentList" resultType="kr.green.spring.vo.CommentVO">
  	select * from comments where co_bd_num = #{co_bd_num} order by co_ori_num desc, co_order asc 
  	limit #{cri.pageStart}, #{cri.perPageNum}
  </select>
  <select id="selectTotalCountComment" resultType="int">
  	select count(*) from comments where co_bd_num = #{co_bd_num}
  </select>
  <select id="selectComment" resultType="kr.green.spring.vo.CommentVO">
  	select * from comments where co_num = #{co_num}
  </select>
  <delete id="deleteComment">
  	delete from comments where co_num = #{co_num}
  </delete>
  <update id="updateComment">
  	update comments set co_content = #{co.co_content} where co_num = #{co.co_num}
  </update>
</mapper>










