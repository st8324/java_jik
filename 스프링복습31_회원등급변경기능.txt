회원 등급 관리 기능

1. header.jsp(링크 추가)
 - 회원등급관리 링크를 추가
  > 등급이 8이상만 접근가능하도록

2. AdminController(컨트롤러에 메소드 추가)
 - 클래스 생성 및 @Controller 추가
 - 메소드 추가

3. /admin/member/list.jsp(화면추가)
 - jsp 생성 후 추가

4. tiles-def.xml
 - /*/*/* 경로일 때 적용 가능하도록 추가

5. 어드민컨트롤러
 - 메소드 수정
  > 매개변수 : HttpSession
     => 로그인한 회원 정보를 가져오려고
         => 회원 등급을 변경할 수 있는 권한이 있는지 확인하기 위해서
         => 로그인 한 회원보다 낮은 권한을 갖는 회원 정보들을 가져오기 위해서
  > 로그인한 회원 정보 가져옴
  > 멤버서비스에게 일을 시킴
    => 매개변수 : 로그인한 회원 정보
    => 리턴타입 : 회원 정보들
    => 기능 : 회원 등급이 8이상면 회원 등급보다 낮은 회원 정보들을 가져오는 기능
  > 화면에 회원 정보들을 전달

6. 멤버서비스/임플
 - 메소드 추가
  > 매개변수 null 체크
  > 회원 등급 체크
  > 멤버다오에게 일을 시킴
     => 매개변수 : 등급권한(정수)
     => 리턴타입 : 회원 정보들
     => 기능 : 주어진 등급권한보다 낮은 권한을 가진 회원 정보들을 가져옴
  > 회원 정보를 리턴

7. 멤버다오/매퍼
 - 메소드 추가
 - select 태그 작성 및 쿼리 구현
  > resultType : MemberVO

8. /admin/member/list.jsp
 - 회원 정보 화면에 출력하도록 배치
  > c:forEach태그 이용 

9. /admin/member/list.jsp
 - 회원 등급이 변경되면 동작하는 이벤트를 등록
  > 변경된 등급과 회원 아이디를 가져와서 객체로 만듬
  > ajax를 이용하여 서버에 객체를 전송하고, 서버에서 보낸 data를 콘솔에 출력

10. 어드민컨트롤러
 - 메소드 추가
  > @ResponseBody
  > 매개변수 : MemberVO, HttpSession
     => MemberVO : 앞에 @RequestBody, 화면에서 보내준 정보를 가져옴
     => HttpSession : 로그인한 회원 정보를 가져옴
   > 멤버서비스에게 일을 시킴
     => 매개변수 : 화면에서 보내준 회원 정보, 로그인한 회원 정보
     => 리턴타입 : 성공여부
     => 기능 : 회원 등급을 변경
   > 변경 여부를 map에 추가

11. 멤버서비스/임플
 - 메소드 추가
  > 매개변수 null 체크
  > 로그인한 사용자 권한 체크
  > 변경하려는 회원 아이디를 이용하여 회원 정보를 가져옴
  > 가져온 회원이 없거나 등급이 로그인한 사용자보다 높거나 같으면 실패를 반환
  > 가져온 회원 정보에 등급을 수정
  > 회원정보를 수정

12. /admin/member/list.jsp
 - ajax
  > 서버에서 보내준 결과를 이용하여 알림창을 띄움





