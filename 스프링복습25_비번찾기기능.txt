비번찾기 

1. pom.xml
 - 의존성 추가

2. root-context.xml
 - 샘플코드 추가(smtp 사용을 위한 코드)
 - 아이디 : 구글 계정(gmail.com으로 된)
 - 비번 : 2차 비번설정 후, 앱비밀번호
  - 앱 비밀번호을 잊었으면 새로 앱 비번을 생성하면 됨

3. MemberServiceImp
 - JavaMailSender 추가
 - @Autowired

4. find.jsp
 - 비밀번호 찾기 이벤트 등록
  > 입력한 이메일, 생일 정보를 가져옴
  > 이메일, 생일에 따른 예외처리
  > ajaxPost 함수를 이용하여 서버에 회원 정보(이메일, 생을)을 전송
   - url : /ajax/find/pw
   - 콘솔에 서버에서 보낸 데이터 출력

5. 홈컨트롤러
 - 메소드 추가
  > url : /ajax/find/pw
  > @ResponseBody
  
6. 홈컨트롤러
 - 멤버서비스에게 일을 시킴
  > 매개변수 : 회원정보(이메일, 생일)
  > 리턴타입 : 참(비번찾기성공)/거짓(실패)
  > 기능 : 일치하는 회원 정보가 있으면 이메일로 임시 비번을 발급하여 전송
 - map에 성공/실패 여부를 저장
7. 멤버서비스/서비스임플
 - 메소드 추가
  > 매개변수 예외처리(null 체크)
  > 넘겨준 회원정보를 이용하여 일치하는 회원 정보를 가져옴
   - 멤버다오에 있는 selectId를 이용하여 회원 아이디를 가져옴
   - 아이디가 없으면 거짓을 반환
   - 아이디가 있으면 멤버 다오에 있는 selectMember를 이용하여 회원 정보를 가져옴
  > 8자리 새 비번을 생성(알파벳,숫자만 가능)
  > 새 비번을 암호화 함
  > 암호화 된 비번을 DB에 업데이트
    - 멤버다오에게 일을 시킴
     > 매개변수 : 회원 정보
     > 리턴타입 : 없음
     > 기능 : 회원 정보 업데이트
   > 새 비번을 입력된 이메일로 전송(암호화 안된 비번)
     - 샘플 코드 참고
   > 성공했다고 알려줌
8. 멤버다오/매퍼
 - 메소드 추가
 - 메소드 구현
  > update태그 및 쿼리문을 이용하여 회원 정보를 업데이트 하도록 함
   - 비번, 성별, 이메일, 등급, 생일을 업데이트
9. find.jsp
 - 서버에서 보내준 결과를 이용하여 알림창을 띄움















